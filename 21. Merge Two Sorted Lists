/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        ListNode temp(0);
        ListNode * MergedList = &temp;
        
        while (l1!=NULL && l2!=NULL){
            
            if (l1->val < l2->val){
                MergedList->next=l1;
                MergedList=l1;
                l1=l1->next;
            }
            else{
                 MergedList->next=l2;
                MergedList=l2;
                l2=l2->next;
            }
        }
        
        if (l1!=NULL){
            MergedList->next=l1;
        }
        if (l2!=NULL){
            MergedList->next=l2;
        }
        return temp.next;
    }
};
